class Solution {
    
    bool CanJump(vector<int>& nums) {
        std::vector<bool> dp(nums.size());
        for (int i = nums.size() - 1; i >= 0; i--)
        {
            if (i == nums.size() - 1)
            {
                dp[i] = true;
                continue;
            }
            int maxJumps = nums[i];
            bool canReach = false;
            for (int j = 1; j <= maxJumps; j++)
            {
                if (i + j <= nums.size() - 1)
                {
                    if (dp[i + j])
                    {
                        canReach = true;
                        break;
                    }
                }
            }
            dp[i] = canReach;
        }
        return dp[0];
    }

public:
    bool canJump(vector<int>& nums) {
        return CanJump(nums);
    }
};